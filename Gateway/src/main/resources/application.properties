# Basic settings
server.port=8090
spring.application.name=gateway

# Eureka and Config Server
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
spring.config.import=optional:configserver:http://localhost:8888



spring.data.redis.host=localhost
spring.data.redis.port=6379


# Gateway routes

spring.cloud.gateway.server.webflux.routes[0].id=user-service-path
spring.cloud.gateway.server.webflux.routes[0].uri=lb://user
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/user/**
spring.cloud.gateway.server.webflux.routes[0].predicates[1]=Header=X-Request-Type,user
spring.cloud.gateway.server.webflux.routes[0].filters[0]=AddRequestHeader=X-Api-Gateway, true
spring.cloud.gateway.server.webflux.routes[0].filters[2]=AddResponseHeader=X-Powered-By, Spring-Gateway
spring.cloud.gateway.server.webflux.routes[0].filters[3]=RequestRateLimiter=redis,replenishRate=100,burstCapacity=500



spring.cloud.gateway.server.webflux.routes[1].id=product-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://product
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/product/order/**


# Locator for service discovery
spring.cloud.gateway.server.webflux.discovery.locator.enabled=false

management.endpoints.web.exposure.include=discovery,info,health,env,metrics


Practice instructions:
Implement Eureka Server 
Add Eureka Client dependency to microservices and configure them 
Use Feign Client to communicate among microservices 
Implement Config Server 
Configure microservices to use config server